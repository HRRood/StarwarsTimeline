generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_CONNECTION_STRING")
}

model Characters {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(100)
  description     String            @db.VarChar(255)
  imageUrl        String            @db.VarChar(100)
  createdAt       DateTime?         @db.DateTime(0)
  updatedAt       DateTime?         @db.DateTime(0)
  EventCharacters EventCharacters[]
}

model EventCharacters {
  eventId     Int
  characterId Int
  Events      Events     @relation(fields: [eventId], references: [id], onDelete: Cascade, map: "EventCharacters_FK")
  Characters  Characters @relation(fields: [characterId], references: [id], onDelete: Cascade, map: "EventCharacters_FK_1")

  @@id([eventId, characterId])
  @@index([characterId], map: "EventCharacters_FK_1")
}

model Events {
  id              Int               @id @default(autoincrement())
  title           String            @unique(map: "Events_UN_Title") @db.VarChar(100)
  description     String            @db.LongText
  fromDate        Int
  toDate          Int
  imageUrl        String?           @db.VarChar(100)
  createdAt       DateTime?         @db.DateTime(0)
  updatedAt       DateTime?         @db.DateTime(0)
  EventCharacters EventCharacters[]
  MediaEvents     MediaEvents[]
}

model Media {
  id          Int           @id @default(autoincrement())
  title       String        @unique(map: "title_UNIQUE") @db.VarChar(255)
  description String?       @db.LongText
  mediaTypeId Int?
  releaseDate DateTime      @db.DateTime(0)
  imageUrl    String?       @db.VarChar(100)
  createdAt   DateTime      @default(now()) @db.DateTime(0)
  updatedAt   DateTime      @default(now()) @db.DateTime(0)
  dateFrom    Int
  dateTo      Int
  MediaType   MediaType?    @relation(fields: [mediaTypeId], references: [id], map: "FK_Media_MediaType")
  MediaEvents MediaEvents[]

  @@index([mediaTypeId], map: "FK_Media_MediaType_idx")
}

model MediaType {
  id    Int     @id @default(autoincrement())
  name  String  @db.VarChar(255)
  Media Media[]
}

model MediaEvents {
  mediaId Int
  eventId Int
  Events  Events @relation(fields: [eventId], references: [id], onDelete: Cascade, map: "FK_MediaEvents_Events")
  Media   Media  @relation(fields: [mediaId], references: [id], onDelete: Cascade, map: "FK_MediaEvents_Media")

  @@id([eventId, mediaId])
  @@index([mediaId], map: "FK_MediaEvents_Media_idx")
}
